{"version":3,"sources":["store/todos.ts","store/search.ts","store/popup.ts","store/activeTodo.ts","store/index.ts","components/SearchTodo/SearchTodo.tsx","helpers/debounce.ts","components/Todo/Todo.tsx","components/TodoList/TodoList.tsx","components/AddTodo/AddTodo.tsx","components/Popup/Popup.tsx","App.tsx","index.tsx"],"names":["initialState","id","uuidv4","name","done","reducer","todos","action","type","todo","filter","map","searchQuery","field","toLowerCase","trim","status","rootReducer","combineReducers","todosReducer","searchReducer","popupStatus","popupStatusReducer","activeTodo","activeTodoReducer","getPopupStatus","state","getActiveTodo","getVisibleTodos","includes","persistedState","localStorage","getItem","JSON","parse","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","setItem","stringify","getState","SearchTodo","dispatch","useDispatch","useState","query","setQuery","handleSearchInput","useCallback","func","delay","timeoutId","args","clearTimeout","setTimeout","debounce","value","className","onChange","e","currentTarget","placeholder","length","onClick","Todo","cn","toggleTodoStatus","setActiveTodoId","TodoList","useSelector","key","AddTodo","inputValue","setInputValue","inputError","setInputError","newTodo","onSubmit","preventDefault","target","maxLength","Popup","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.554f6ce9.chunk.js","sourcesContent":["import { Action } from 'redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst ADD_TODO = 'ADD_TODO';\nconst REMOVE_TODO = 'REMOVE_TODO';\nconst TOGGLE_TODO_STATUS = 'TOGGLE_TODO_STATUS';\n\ntype AddTodoAction = Action<typeof ADD_TODO> & {\n  todo: Todo,\n};\n\ntype RemoveTodoAction = Action<typeof REMOVE_TODO> & {\n  id: string;\n};\n\ntype ToggleTodoStatusAction = Action<typeof TOGGLE_TODO_STATUS> & {\n  id: string;\n};\n\nexport const addTodoItem = (todo: Todo) => ({\n  type: ADD_TODO,\n  todo,\n});\n\nexport const removeTodoItem = (id: string) => ({\n  type: REMOVE_TODO,\n  id,\n});\n\nexport const toggleTodoStatus = (id: string) => ({\n  type: TOGGLE_TODO_STATUS,\n  id,\n});\n\nconst initialState: Todo[] = [\n  {\n    id: uuidv4(),\n    name: 'Learn English',\n    done: false,\n  },\n  {\n    id: uuidv4(),\n    name: 'Make a Homework',\n    done: true,\n  },\n  {\n    id: uuidv4(),\n    name: 'Learn React',\n    done: false,\n  }\n]\n\ntype PossibleActions =\n  AddTodoAction | RemoveTodoAction | ToggleTodoStatusAction;\n\nconst reducer = (todos: Todo[] = initialState, action: PossibleActions) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return [\n        ...todos,\n        action.todo,\n      ];\n\n    case REMOVE_TODO:\n      return todos.filter(todo => todo.id !== action.id);\n\n    case TOGGLE_TODO_STATUS:\n      return todos.map(todo => {\n        if (todo.id === action.id) {\n          return {\n            ...todo,\n            done: !todo.done,\n          }\n        }\n\n        return todo;\n      });\n\n    default:\n      return todos;\n  }\n};\n\nexport default reducer;\n","import { Action } from 'redux';\n\nconst SET_QUERY = 'SET_QUERY';\n\ntype SetQueryAction = Action<typeof SET_QUERY> & {\n  field: string;\n};\n\nexport const setSearchQuery = (field: string) => ({\n  type: SET_QUERY,\n  field,\n});\n\ntype PossibleActions = SetQueryAction;\n\nconst reducer = (searchQuery = '', action: PossibleActions) => {\n  switch (action.type) {\n    case SET_QUERY:\n      return (action.field).toLowerCase().trim();\n\n    default:\n      return searchQuery;\n  }\n};\n\nexport default reducer;\n","import { Action } from 'redux';\n\nconst OPEN_POPUP = 'OPEN_POPUP';\nconst CLOSE_POPUP = 'CLOSE_POPUP';\n\ntype OpenAction = Action<typeof OPEN_POPUP>;\ntype CloseAction = Action<typeof CLOSE_POPUP>;\n\nexport const openPopup = () => ({ type: OPEN_POPUP });\n\nexport const closePopup = () => ({ type: CLOSE_POPUP });\n\ntype PossibleActions = OpenAction | CloseAction;\n\nconst reducer = (status = false, action: PossibleActions) => {\n  switch (action.type) {\n    case OPEN_POPUP:\n      return true;\n\n    case CLOSE_POPUP:\n      return false;\n\n    default:\n      return status;\n  }\n};\n\nexport default reducer;\n","import { Action } from 'redux';\n\nconst SET_ACTIVE_TODO_ID = 'SET_ACTIVE_TODO_ID';\nconst REMOVE_ACTIVE_TODO_ID = 'REMOVE_ACTIVE_TODO_ID';\n\ntype SetActiveTodoIdAction = Action<typeof SET_ACTIVE_TODO_ID> & {\n  id: string;\n};\n\ntype RemoveActiveTodoIdAction = Action<typeof REMOVE_ACTIVE_TODO_ID>;\n\nexport const setActiveTodoId = (id: string) => ({\n  type: SET_ACTIVE_TODO_ID,\n  id,\n});\n\nexport const removeActiveTodoId = () => ({ type: REMOVE_ACTIVE_TODO_ID });\n\ntype PossibleActions = SetActiveTodoIdAction | RemoveActiveTodoIdAction;\n\nconst reducer = (id = null, action: PossibleActions) => {\n  switch (action.type) {\n    case SET_ACTIVE_TODO_ID:\n      return action.id;\n\n    case REMOVE_ACTIVE_TODO_ID:\n      return null;\n\n    default:\n      return id;\n  }\n};\n\nexport default reducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport todosReducer from './todos';\nimport searchReducer from './search';\nimport popupStatusReducer from \"./popup\";\nimport activeTodoReducer from \"./activeTodo\";\n\nconst rootReducer = combineReducers({\n  todos: todosReducer,\n  searchQuery: searchReducer,\n  popupStatus: popupStatusReducer,\n  activeTodo: activeTodoReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const getPopupStatus = (state: RootState) => state.popupStatus;\nexport const getActiveTodo = (state: RootState) => state.activeTodo;\n\nexport const getVisibleTodos = (state: RootState) => {\n  let visibleTodos: Todo[] = state.todos.filter((todo: Todo) => {\n    if (state.searchQuery !== '') {\n      return (`${todo.name.toLowerCase()}`).includes(state.searchQuery);\n    }\n\n    return todo;\n  });\n\n  return visibleTodos;\n}\n\nconst persistedState = localStorage.getItem('rootState')\n  ? JSON.parse(localStorage.getItem('rootState') || '')\n  : {};\n\nconst store = createStore(\n  rootReducer,\n  persistedState,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nstore.subscribe(() => {\n  localStorage.setItem('rootState', JSON.stringify(store.getState()));\n});\n\nexport default store;\n","import React, { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport './SearchTodo.scss'\n\nimport { debounce } from '../../helpers/debounce';\nimport { setSearchQuery } from '../../store/search';\n\nexport const SearchTodo = () => {\n  const dispatch = useDispatch();\n  const [query, setQuery] = useState('');\n\n  const handleSearchInput = useCallback(debounce((value: string) => {\n    dispatch(setSearchQuery(value));\n  }, 500), []);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    handleSearchInput(e.currentTarget.value);\n    setQuery(e.currentTarget.value);\n  }\n\n  const handleInputReset = () => {\n    handleSearchInput('');\n    setQuery('');\n  }\n\n  return (\n    <div className=\"todo__search search\">\n      <input\n        className=\"search__input\"\n        type=\"text\"\n        value={query}\n        onChange={handleInputChange}\n        placeholder=\"Enter task name for search...\"\n      />\n      {query.length > 0 && (\n        <button\n          className=\"search__reset\"\n          type=\"button\"\n          onClick={handleInputReset}\n        >\n        </button>\n      )}\n    </div>\n  );\n}\n","export function debounce(func: (...args: string[]) => void, delay: number) {\n  let timeoutId: ReturnType<typeof setTimeout>;\n\n  return (...args: string[]): void => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(() => {\n      func(...args);\n    }, delay);\n  };\n}\n","import React from 'react';\nimport './Todo.scss';\nimport cn from 'classnames';\n\nimport { useDispatch } from 'react-redux';\nimport { openPopup } from \"../../store/popup\";\nimport { toggleTodoStatus } from '../../store/todos';\nimport { setActiveTodoId } from '../../store/activeTodo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const Todo: React.FC<Props> = ({ todo }) => {\n  const { id, name, done } = todo;\n  const dispatch = useDispatch();\n\n  const handleOpenPopup = () => {\n    dispatch(setActiveTodoId(id));\n    dispatch(openPopup());\n  }\n\n  const handleToggleTodoStatus = () => {\n    dispatch(toggleTodoStatus(id));\n  }\n\n  return (\n    <>\n      <span\n        className={cn('todo__text', {\n          'todo__text--dissabled': done\n        })}\n        onClick={handleToggleTodoStatus}\n      >\n        {name}\n      </span>\n      {\n        done && (\n          <button\n            className=\"todo__remove-task\"\n            type=\"button\"\n            onClick={handleOpenPopup}\n          >\n            Delete\n          </button>\n        )\n      }\n    </>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport './TodoList.scss'\n\nimport * as store from '../../store';\n\nimport { Todo } from '../Todo/Todo';\n\nexport const TodoList = () => {\n  const todos = useSelector(store.getVisibleTodos);\n\n  return (\n    <ul className=\"todo__list\">\n      {todos.map(todo => (\n        <li key={todo.id} className=\"todo__item\">\n          <Todo todo={todo} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './AddTodo.scss';\n\nimport { useDispatch } from 'react-redux';\nimport { addTodoItem } from '../../store/todos';\n\nexport const AddTodo = () => {\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState('');\n  const [inputError, setInputError] = useState('');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n    setInputError('');\n  }\n\n  const newTodo = {\n    id: uuidv4(),\n    name: inputValue,\n    done: false,\n  }\n\n  const handleAddTodo = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (inputValue.length > 2) {\n      dispatch(addTodoItem(newTodo));\n      setInputValue('');\n    } else {\n      setInputError('The task must be at least 3 characters');\n    }\n  }\n\n  return (\n    <div className=\"todo__add-task add-task\">\n      <form\n        className=\"add-task__form\"\n        action=\"#\"\n        onSubmit={handleAddTodo}\n      >\n        <input\n          className=\"add-task__input\"\n          onChange={handleInputChange}\n          value={inputValue}\n          maxLength={50}\n          placeholder='Enter task and press \"Add Task\" button'\n        >\n        </input>\n        <button\n          className=\"add-task__button\"\n          type=\"submit\"\n        >Add Task\n        </button>\n      </form>\n      {\n        inputError\n        &&\n        <span className=\"add-task__error\">{inputError}</span>\n      }\n    </div>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './Popup.scss';\nimport cn from 'classnames';\n\nimport * as store from '../../store';\n\nimport { closePopup } from \"../../store/popup\";\nimport { removeTodoItem } from '../../store/todos';\nimport { removeActiveTodoId } from '../../store/activeTodo';\n\nexport const Popup = () => {\n  const dispatch = useDispatch();\n  const activeTodo = useSelector(store.getActiveTodo);\n  const popupStatus = useSelector(store.getPopupStatus);\n\n  const handleCancelRemoveTodo = () => {\n    dispatch(removeActiveTodoId());\n    dispatch(closePopup());\n  }\n\n  const handleRemoveTodo = () => {\n    dispatch(removeTodoItem(activeTodo));\n    dispatch(removeActiveTodoId());\n    dispatch(closePopup());\n  }\n\n  return (\n    <div className={cn(\"todo__popup popup\", {\n      \"popup--open\": popupStatus\n    })}>\n      <p>Do you really want to remove this task?</p>\n      <div className=\"popup__controls\">\n        <button\n          className=\"popup__button\"\n          type=\"button\"\n          onClick={handleRemoveTodo}\n        >\n          Ok\n      </button>\n        <button\n          className=\"popup__button popup__button--red\"\n          type=\"button\"\n          onClick={handleCancelRemoveTodo}\n        >\n          Cancel\n      </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport './App.scss';\nimport cn from 'classnames';\n\nimport * as store from './store';\n\nimport {SearchTodo} from './components/SearchTodo/SearchTodo';\nimport {TodoList} from './components/TodoList/TodoList';\nimport {AddTodo} from './components/AddTodo/AddTodo';\nimport {Popup} from './components/Popup/Popup';\n\nconst App = () => {\n  const popupStatus = useSelector(store.getPopupStatus);\n\n  return (\n    <div className=\"app\">\n      <main className=\"content\">\n        <div className=\"todo\">\n          {popupStatus && <Popup />}\n          <div\n            className={cn('layout', {\n              \"layout--active\": popupStatus,\n            })}\n          >\n          </div>\n          <SearchTodo />\n          <TodoList />\n          <AddTodo />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}